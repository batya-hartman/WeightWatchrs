2020-07-12 09:44:15.332 INFO  Logging to 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 09:44:17.782 INFO  Auditing processed messages to 'audit'
2020-07-12 09:44:18.306 INFO  Selected active license from C:\Users\user1\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 09:44:21.332 INFO  Executing 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 09:45:11.420 ERROR Received UpdateCard in subscriber, weight = 150 ...
2020-07-12 09:50:53.674 INFO  Logging to 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 09:50:54.158 INFO  Auditing processed messages to 'audit'
2020-07-12 09:50:54.359 INFO  Selected active license from C:\Users\user1\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 09:50:55.335 INFO  Executing 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 09:51:21.579 ERROR Received UpdateCard in subscriber, weight = 130 ...
2020-07-12 11:05:22.841 INFO  Logging to 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 11:05:23.354 INFO  Auditing processed messages to 'audit'
2020-07-12 11:05:23.604 INFO  Selected active license from C:\Users\user1\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 11:05:24.922 INFO  Executing 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 11:05:37.798 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:37.798 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:37.798 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:37.798 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:40.621 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
System.InvalidOperationException: An attempt was made to use the context while it is being configured. A DbContext instance cannot be used inside OnConfiguring since it is still being configured at this point. This can happen if a second operation is started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, LambdaExpression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source, Expression`1 predicate, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:25:923569 Z
	Handler failure time: 2020-07-12 08:05:40:150254 Z
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:05:40.621 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: An attempt was made to use the context while it is being configured. A DbContext instance cannot be used inside OnConfiguring since it is still being configured at this point. This can happen if a second operation is started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, LambdaExpression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source, Expression`1 predicate, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:25:923580 Z
	Handler failure time: 2020-07-12 08:05:40:074529 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:05:40.621 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: An attempt was made to use the context while it is being configured. A DbContext instance cannot be used inside OnConfiguring since it is still being configured at this point. This can happen if a second operation is started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, LambdaExpression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync[TSource](IQueryable`1 source, Expression`1 predicate, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:25:923586 Z
	Handler failure time: 2020-07-12 08:05:40:074528 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:05:45.602 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:43.254 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:46.495 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:48.203 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:40:873701 Z
	Handler failure time: 2020-07-12 08:05:48:082803 Z
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:05:48.204 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:25:923574 Z
	Handler failure time: 2020-07-12 08:05:48:082794 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:06:00.807 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:05:48.203 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:45:642289 Z
	Handler failure time: 2020-07-12 08:05:48:082906 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:06:02.980 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:04.578 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:04.631 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:48:233531 Z
	Handler failure time: 2020-07-12 08:06:03:184713 Z
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:06:04.973 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:00:944196 Z
	Handler failure time: 2020-07-12 08:06:04:723162 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:06:05.988 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:05.989 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:03:289473 Z
	Handler failure time: 2020-07-12 08:06:04:972765 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:06:06.759 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:07.166 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:07.331 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:05:018786 Z
	Handler failure time: 2020-07-12 08:06:06:995868 Z
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:06:07.756 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:05:998719 Z
	Handler failure time: 2020-07-12 08:06:07:472727 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:06:10.325 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:10.341 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:10.328 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:07:044958 Z
	Handler failure time: 2020-07-12 08:06:07:755132 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:06:10.776 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:10.986 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:07:779415 Z
	Handler failure time: 2020-07-12 08:06:10:683083 Z
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:06:11.150 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:10:341731 Z
	Handler failure time: 2020-07-12 08:06:10:870546 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:06:11.216 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:11.206 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:10:776914 Z
	Handler failure time: 2020-07-12 08:06:11:150044 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:06:11.232 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:11.649 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:12.165 WARN  Delayed Retry will reschedule message '414bb003-62bc-40e8-9ecf-abf600843ba6' after a delay of 00:00:10 because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:11:216264 Z
	Handler failure time: 2020-07-12 08:06:11:610128 Z
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:06:12.513 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:11:232509 Z
	Handler failure time: 2020-07-12 08:06:12:080065 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:06:12.515 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:10 because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:11:648668 Z
	Handler failure time: 2020-07-12 08:06:12:434757 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:06:12.552 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:06:13.003 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:10 because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:06:12:552598 Z
	Handler failure time: 2020-07-12 08:06:12:940026 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:08:32.256 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:08:32.268 WARN  'Subscriber MessagePump' connection shutdown: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
2020-07-12 11:08:32.269 WARN  'Subscriber Publish' connection shutdown: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
2020-07-12 11:08:34.847 WARN  The circuit breaker for 'Subscriber MessagePump' is now in the armed state
2020-07-12 11:08:43.502 INFO  Attempting to reconnect in 10 seconds.
2020-07-12 11:08:46.334 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.UpdateCard(CardModel cardUpdated) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 111
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 57
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:08:32:256742 Z
	Handler failure time: 2020-07-12 08:08:46:133083 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:08:46.350 INFO  The circuit breaker for 'Subscriber MessagePump' is now disarmed
2020-07-12 11:08:46.381 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:08:46.382 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:08:46.382 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:08:47.286 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:08:47.948 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:02.304 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:08:47:285990 Z
	Handler failure time: 2020-07-12 08:09:00:991985 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:02.840 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:08:47:948757 Z
	Handler failure time: 2020-07-12 08:09:01:620341 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:02.304 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.UpdateCard(CardModel cardUpdated) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 111
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 57
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:08:46:382566 Z
	Handler failure time: 2020-07-12 08:08:58:726229 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:02.923 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:03.050 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:04.621 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:02:923512 Z
	Handler failure time: 2020-07-12 08:09:04:142007 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:04.623 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.UpdateCard(CardModel cardUpdated) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 116
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 57
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:05:43:292796 Z
	Handler failure time: 2020-07-12 08:09:04:449286 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:04.537 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(DbContext _, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.UpdateCard(CardModel cardUpdated) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 116
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 57
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:08:46:381971 Z
	Handler failure time: 2020-07-12 08:09:04:005836 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:04.666 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:04.672 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:04.639 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:04.623 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:03:050708 Z
	Handler failure time: 2020-07-12 08:09:04:495349 Z
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:09:05.539 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:06.031 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:04:672897 Z
	Handler failure time: 2020-07-12 08:09:05:488807 Z
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:09:06.150 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:04:666264 Z
	Handler failure time: 2020-07-12 08:09:05:422695 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:06.214 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:06.220 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:06.201 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:04:639437 Z
	Handler failure time: 2020-07-12 08:09:05:788040 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:06.204 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:05:539970 Z
	Handler failure time: 2020-07-12 08:09:06:150549 Z
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:09:06.754 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:06.986 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:06:214148 Z
	Handler failure time: 2020-07-12 08:09:06:472537 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:07.029 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:07.407 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:07.406 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:06:220973 Z
	Handler failure time: 2020-07-12 08:09:06:985808 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:08.246 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:07:407408 Z
	Handler failure time: 2020-07-12 08:09:08:174253 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:08.262 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:07.988 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:06:754557 Z
	Handler failure time: 2020-07-12 08:09:07:405906 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:08.299 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:08.245 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:07:029953 Z
	Handler failure time: 2020-07-12 08:09:07:928183 Z
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:09:08.729 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:09.257 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:09.183 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:08:262969 Z
	Handler failure time: 2020-07-12 08:09:08:673729 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:09.185 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:08:299419 Z
	Handler failure time: 2020-07-12 08:09:09:106932 Z
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:09:10.049 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:10.073 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:10.054 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:08:729002 Z
	Handler failure time: 2020-07-12 08:09:09:738216 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:10.049 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:09:257566 Z
	Handler failure time: 2020-07-12 08:09:09:981460 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:10.750 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:10.816 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:10:049393 Z
	Handler failure time: 2020-07-12 08:09:10:536350 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:10.817 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:10:073728 Z
	Handler failure time: 2020-07-12 08:09:10:748444 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:20.089 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:20.118 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:10.840 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:10.829 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:27.654 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:27.654 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:20:089335 Z
	Handler failure time: 2020-07-12 08:09:20:796742 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:27.634 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:20:118765 Z
	Handler failure time: 2020-07-12 08:09:21:124109 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:28.017 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:27.655 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:10:839985 Z
	Handler failure time: 2020-07-12 08:09:27:572756 Z
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:09:28.016 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:27:654395 Z
	Handler failure time: 2020-07-12 08:09:27:954318 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:27.655 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:10:829061 Z
	Handler failure time: 2020-07-12 08:09:27:572359 Z
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:58.056 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:58.061 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:09:53.871 INFO  Reconnecting to the broker failed.
RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable
 ---> System.IO.IOException: connection.start was never received, likely due to a network timeout
   at RabbitMQ.Client.Framing.Impl.Connection.StartAndTune()
   at RabbitMQ.Client.Framing.Impl.Connection.Open(Boolean insist)
   at RabbitMQ.Client.Framing.Impl.Connection..ctor(IConnectionFactory factory, Boolean insist, IFrameHandler frameHandler, String clientProvidedName)
   at RabbitMQ.Client.Framing.Impl.ProtocolBase.CreateConnection(IConnectionFactory factory, Boolean insist, IFrameHandler frameHandler, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)
   at RabbitMQ.Client.ConnectionFactory.CreateConnection(String clientProvidedName)
   at NServiceBus.Transport.RabbitMQ.ConnectionFactory.CreateConnection(String connectionName, Boolean automaticRecoveryEnabled)
   at NServiceBus.Transport.RabbitMQ.ConnectionFactory.CreatePublishConnection()
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.CreateConnection()
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.Reconnect()
2020-07-12 11:09:58.086 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:58.108 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:58.105 INFO  Attempting to reconnect in 10 seconds.
2020-07-12 11:09:49.670 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:49.670 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:58.866 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:58:107981 Z
	Handler failure time: 2020-07-12 08:09:58:384277 Z
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:58.867 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.UpdateCard(CardModel cardUpdated) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 111
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 57
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:49:670182 Z
	Handler failure time: 2020-07-12 08:09:58:746061 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:58.884 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:58.889 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:59.326 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
System.InvalidOperationException: A second operation started on this context before a previous operation completed. This is usually caused by different threads using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\project\WeightWatchers\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 08:09:58:889958 Z
	Handler failure time: 2020-07-12 08:09:59:249451 Z
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:59.353 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:09:59.373 ERROR Received UpdateCard in subscriber, weight = 100 ...
2020-07-12 11:09:59.586 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:59.586 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:09:59.588 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:09:59.587 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:09:59.587 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:59.864 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
System.Exception: Failed to ExecuteNonQuery. CommandText:

insert into [dbo].[Subscriber_OutboxData]
(
    MessageId,
    Operations,
    PersistenceVersion
)
values
(
    @MessageId,
    @Operations,
    @PersistenceVersion
)
 ---> System.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK__Subscrib__C87C0C9D7901A60B'. Cannot insert duplicate key in object 'dbo.Subscriber_OutboxData'. The duplicate key value is (5a24b7b0-45df-4ae3-8852-abf60084d6d7).
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.CompleteAsyncExecuteReader()
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Extensions.ExecuteNonQueryEx(DbCommand command, CancellationToken cancellationToken) in /_/src/SqlPersistence/Extensions.cs:line 107
ClientConnectionId:59d93acd-23c1-4cbc-8483-6fd61778efd9
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Extensions.ExecuteNonQueryEx(DbCommand command, CancellationToken cancellationToken) in /_/src/SqlPersistence/Extensions.cs:line 112
   at OptimisticConcurrencyControlStrategy.Complete(OutboxMessage outboxMessage, DbConnection connection, DbTransaction transaction, ContextBag context) in /_/src/SqlPersistence/Outbox/OptimisticConcurrencyControlStrategy.cs:line 33
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:09:59.602 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:09:59.864 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
System.Exception: Failed to ExecuteNonQuery. CommandText:

insert into [dbo].[Subscriber_OutboxData]
(
    MessageId,
    Operations,
    PersistenceVersion
)
values
(
    @MessageId,
    @Operations,
    @PersistenceVersion
)
 ---> System.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK__Subscrib__C87C0C9D7901A60B'. Cannot insert duplicate key in object 'dbo.Subscriber_OutboxData'. The duplicate key value is (37489e4b-f87e-46cd-a105-abf600838d7b).
The statement has been terminated.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.CompleteAsyncExecuteReader()
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Extensions.ExecuteNonQueryEx(DbCommand command, CancellationToken cancellationToken) in /_/src/SqlPersistence/Extensions.cs:line 107
ClientConnectionId:c7c6882c-7a9c-41ba-a398-fc6768a96762
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Extensions.ExecuteNonQueryEx(DbCommand command, CancellationToken cancellationToken) in /_/src/SqlPersistence/Extensions.cs:line 112
   at OptimisticConcurrencyControlStrategy.Complete(OutboxMessage outboxMessage, DbConnection connection, DbTransaction transaction, ContextBag context) in /_/src/SqlPersistence/Outbox/OptimisticConcurrencyControlStrategy.cs:line 33
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:59.588 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:59.986 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:09:59.987 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:09:59.987 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.012 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.014 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:10:00.024 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:09:59.987 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.075 INFO  Immediate Retry is going to retry message '414bb003-62bc-40e8-9ecf-abf600843ba6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 414bb003-62bc-40e8-9ecf-abf600843ba6
2020-07-12 11:09:59.987 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:09:59.987 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.117 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.203 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.231 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.248 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.269 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.262 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.296 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.303 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.284 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.324 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.336 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.348 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.117 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.372 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.383 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.395 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.330 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.421 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.426 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.447 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.459 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.468 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.478 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.493 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.502 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:00.511 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.531 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.435 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.549 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.358 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.577 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.590 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.602 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.611 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.623 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.635 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.564 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.656 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.673 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.689 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.721 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.727 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.739 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.750 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.760 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.774 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.785 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.795 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.807 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.822 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.837 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.851 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.860 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.871 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.881 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.886 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.898 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.907 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.911 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.922 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.647 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.940 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.952 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:00.966 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:00.964 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.985 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.024 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:00.973 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.076 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.090 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.107 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.119 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.107 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.142 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.141 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.164 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.172 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.180 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.191 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.199 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.207 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.217 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.229 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.248 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.261 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.283 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.294 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.153 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.317 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.323 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.334 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.343 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.354 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.366 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.375 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.382 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.390 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.406 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.418 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.426 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.434 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.443 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.463 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.476 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.484 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.496 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.506 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.518 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.527 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.537 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.551 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.565 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.574 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.588 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.324 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.604 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.617 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.626 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.631 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.642 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.652 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.665 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.673 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.617 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.736 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.696 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.752 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.786 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.791 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.824 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.843 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.852 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:00.555 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:01.891 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.920 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.949 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:01.975 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:01.990 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.997 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.007 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:01.975 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.037 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.040 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.072 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.084 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.097 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.107 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.120 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.132 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.140 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.152 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.062 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.169 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.188 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.202 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.180 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.235 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.225 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.257 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.269 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.278 INFO  Immediate Retry is going to retry message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.290 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.300 WARN  Delayed Retry will reschedule message 'cf6fdd52-cc46-460f-89a0-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: cf6fdd52-cc46-460f-89a0-abf600864fd9
2020-07-12 11:10:02.315 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.322 FATAL Failed to execute recoverability policy for message with native ID: `cf6fdd52-cc46-460f-89a0-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.344 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.248 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.375 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.385 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:01.959 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.412 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.420 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.430 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.440 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.450 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.461 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.472 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.482 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.489 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.503 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.517 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.538 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.546 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.563 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.577 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.590 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.601 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.608 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.618 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.626 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.400 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.647 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.653 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.664 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.674 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.659 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.692 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.702 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.697 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.716 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.721 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.732 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.735 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.744 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.750 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.765 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.757 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.776 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.781 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.793 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.800 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.812 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.821 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.824 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.838 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.834 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.844 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.857 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.858 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.870 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.865 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.882 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.887 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.877 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.894 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.901 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:02.908 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.914 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.927 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:02.939 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:02.951 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.964 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:02.919 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.012 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.021 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.024 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.039 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.046 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.062 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.073 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.078 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.088 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.066 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.106 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.102 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.120 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.129 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.134 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.143 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.113 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.158 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.177 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.181 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.189 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.211 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.225 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.241 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.246 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.273 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.283 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.256 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.306 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.317 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.326 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.333 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.338 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.323 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.355 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.364 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:09:59.986 WARN  Delayed Retry will reschedule message 'f3a85cc7-e9af-408c-a394-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.370 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.377 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.381 FATAL Failed to execute recoverability policy for message with native ID: `f3a85cc7-e9af-408c-a394-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.423 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.435 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.445 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.467 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.469 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.470 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.496 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.524 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.555 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.572 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.573 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.599 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.607 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.618 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.625 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.631 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.638 WARN  Delayed Retry will reschedule message 'f3a85cc7-e9af-408c-a394-abf600864fd9' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.587 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.654 FATAL Failed to execute recoverability policy for message with native ID: `f3a85cc7-e9af-408c-a394-abf600864fd9`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.649 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.483 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.675 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.686 INFO  Immediate Retry is going to retry message 'f3a85cc7-e9af-408c-a394-abf600864fd9' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f3a85cc7-e9af-408c-a394-abf600864fd9
2020-07-12 11:10:03.695 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.702 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.717 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.725 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.732 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.740 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.748 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.757 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.762 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.772 WARN  Delayed Retry will reschedule message 'f21128e9-2105-4c58-abee-abf6008499d6' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.686 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.786 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.786 FATAL Failed to execute recoverability policy for message with native ID: `f21128e9-2105-4c58-abee-abf6008499d6`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.792 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:03.822 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.835 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.841 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.847 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.857 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.868 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.875 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.888 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.896 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.904 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.882 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:03.920 WARN  Delayed Retry will reschedule message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' after a delay of 00:00:10 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:03.922 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.968 FATAL Failed to execute recoverability policy for message with native ID: `5a24b7b0-45df-4ae3-8852-abf60084d6d7`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:04.000 WARN  Delayed Retry will reschedule message '37489e4b-f87e-46cd-a105-abf600838d7b' after a delay of 00:00:20 because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:03.967 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:04.030 FATAL Failed to execute recoverability policy for message with native ID: `37489e4b-f87e-46cd-a105-abf600838d7b`
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.DelayedRetryExecutor.Retry(IncomingMessage message, TimeSpan delay, TransportTransaction transportTransaction)
   at NServiceBus.RecoverabilityExecutor.DeferMessage(DelayedRetry action, ErrorContext errorContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
2020-07-12 11:10:04.032 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:04.050 INFO  Immediate Retry is going to retry message 'f21128e9-2105-4c58-abee-abf6008499d6' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: f21128e9-2105-4c58-abee-abf6008499d6
2020-07-12 11:10:04.067 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:04.067 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:04.088 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:04.103 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:04.110 INFO  Immediate Retry is going to retry message '37489e4b-f87e-46cd-a105-abf600838d7b' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 37489e4b-f87e-46cd-a105-abf600838d7b
2020-07-12 11:10:04.121 INFO  Immediate Retry is going to retry message '5a24b7b0-45df-4ae3-8852-abf60084d6d7' because of an exception:
RabbitMQ.Client.Exceptions.AlreadyClosedException: Already closed: The AMQP operation was interrupted: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
   at RabbitMQ.Client.Framing.Impl.Connection.EnsureIsOpen()
   at RabbitMQ.Client.Framing.Impl.Connection.CreateModel()
   at NServiceBus.Transport.RabbitMQ.ConfirmsAwareChannel..ctor(IConnection connection, IRoutingTopology routingTopology, Boolean usePublisherConfirms)
   at NServiceBus.Transport.RabbitMQ.ChannelProvider.GetPublishChannel()
   at NServiceBus.Transport.RabbitMQ.MessageDispatcher.Dispatch(TransportOperations outgoingMessages, TransportTransaction transaction, ContextBag context)
   at NServiceBus.ImmediateDispatchTerminator.Terminate(IDispatchContext context)
   at NServiceBus.Pipeline.PipelineTerminator`1.Invoke(T context, Func`2 next)
   at (Closure`2 , IDispatchContext )
   at NServiceBus.BatchToDispatchConnector.Invoke(IBatchDispatchContext context, Func`2 stage)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.ForceBatchDispatchToBeIsolatedBehavior.Invoke(IBatchDispatchContext context, Func`2 next)
   at (Closure`2 , IBatchDispatchContext )
   at NServiceBus.Pipeline`1.Invoke(TContext context)
   at NServiceBus.PipelineInvocationExtensions.InvokePipeline[TContext](TContext context)
   at NServiceBus.ForkExtensions.Fork[TFromContext,TToContext,TForkContext](IForkConnector`3 forkConnector, TForkContext context)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5a24b7b0-45df-4ae3-8852-abf60084d6d7
2020-07-12 11:10:17.165 INFO  Logging to 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 11:10:17.559 INFO  Auditing processed messages to 'audit'
2020-07-12 11:10:17.714 INFO  Selected active license from C:\Users\user1\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 11:10:18.891 INFO  Executing 'C:\Users\user1\Documents\Yehudit\Brix\WeightWatchers\proj\12-07\WeightWatchers\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 11:11:08.492 ERROR Received UpdateCard in subscriber, weight = 110 ...
2020-07-12 12:33:49.768 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:33:50.057 INFO  Auditing processed messages to 'audit'
2020-07-12 12:33:50.140 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:34:05.289 ERROR Could not complete the installation. 
System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at NServiceBus.Persistence.Sql.ScriptRunner.ExecuteInSeparateConnection[T](Func`6 installAction, String scriptDirectory, String tablePrefix, SqlDialect sqlDialect, Func`2 connectionBuilder) in /_/src/SqlPersistence/ScriptRunner.cs:line 70
   at NServiceBus.Persistence.Sql.ScriptRunner.Install(SqlDialect sqlDialect, String tablePrefix, Func`2 connectionBuilder, String scriptDirectory, Boolean shouldInstallOutbox, Boolean shouldInstallSagas, Boolean shouldInstallSubscriptions, Boolean shouldInstallTimeouts) in /_/src/SqlPersistence/ScriptRunner.cs:line 48
   at SqlPersistenceInstaller.Install(String identity) in /_/src/SqlPersistence/NeedToInstallSomething.cs:line 40
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 53
	HelpLink.BaseHelpUrl: https://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
2020-07-12 12:38:04.857 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:38:05.014 INFO  Auditing processed messages to 'audit'
2020-07-12 12:38:05.083 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:38:05.424 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:38:05.783 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:06.673 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:05:782960 Z
	Handler failure time: 2020-07-12 09:38:06:610479 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:06.705 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:06.858 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:06:705260 Z
	Handler failure time: 2020-07-12 09:38:06:821136 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:06.871 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:07.023 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:06:871376 Z
	Handler failure time: 2020-07-12 09:38:06:984745 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:07.036 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:07.184 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:07:036956 Z
	Handler failure time: 2020-07-12 09:38:07:145351 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:07.195 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:07.346 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:07:195082 Z
	Handler failure time: 2020-07-12 09:38:07:305772 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:07.361 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:07.518 WARN  Delayed Retry will reschedule message '28c269a3-1099-4239-aac3-abf300d2d5a5' after a delay of 00:00:10 because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:07:361252 Z
	Handler failure time: 2020-07-12 09:38:07:474871 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:17.578 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:17.730 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:17:578146 Z
	Handler failure time: 2020-07-12 09:38:17:691585 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:17.742 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:17.889 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:17:742114 Z
	Handler failure time: 2020-07-12 09:38:17:848666 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:17.900 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:18.044 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:17:900438 Z
	Handler failure time: 2020-07-12 09:38:18:006792 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:18.059 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:18.204 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:18:059002 Z
	Handler failure time: 2020-07-12 09:38:18:166001 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:18.217 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:18.362 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:18:216995 Z
	Handler failure time: 2020-07-12 09:38:18:325315 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:38:18.378 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:38:18.526 WARN  Delayed Retry will reschedule message '28c269a3-1099-4239-aac3-abf300d2d5a5' after a delay of 00:00:20 because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:745fec72-1467-4a07-8f27-2ebb47041df1
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:38:18:378862 Z
	Handler failure time: 2020-07-12 09:38:18:486503 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:39:29.437 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:39:29.591 INFO  Auditing processed messages to 'audit'
2020-07-12 12:39:29.659 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:39:30.005 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:39:30.305 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:39:31.276 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:39:30:304927 Z
	Handler failure time: 2020-07-12 09:39:31:216197 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:39:31.309 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:39:31.472 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:39:31:309038 Z
	Handler failure time: 2020-07-12 09:39:31:432339 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:39:31.485 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:39:31.640 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:39:31:485259 Z
	Handler failure time: 2020-07-12 09:39:31:600340 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:39:31.657 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:39:31.811 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:39:31:657011 Z
	Handler failure time: 2020-07-12 09:39:31:771928 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:39:31.825 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:39:31.973 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:39:31:825947 Z
	Handler failure time: 2020-07-12 09:39:31:935132 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:39:31.985 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:39:32.141 WARN  Delayed Retry will reschedule message '28c269a3-1099-4239-aac3-abf300d2d5a5' after a delay of 00:00:30 because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:39:31:985532 Z
	Handler failure time: 2020-07-12 09:39:32:098538 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:03.285 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:26.212 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:03:285424 Z
	Handler failure time: 2020-07-12 09:40:17:712880 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:26.234 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:30.299 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:26:234710 Z
	Handler failure time: 2020-07-12 09:40:30:252710 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:30.313 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:30.492 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:30:313695 Z
	Handler failure time: 2020-07-12 09:40:30:446004 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:30.506 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:34.563 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:30:506464 Z
	Handler failure time: 2020-07-12 09:40:32:408713 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:34.582 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:34.758 INFO  Immediate Retry is going to retry message '28c269a3-1099-4239-aac3-abf300d2d5a5' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:34:582489 Z
	Handler failure time: 2020-07-12 09:40:34:716045 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:34.771 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:34.936 ERROR Moving message '28c269a3-1099-4239-aac3-abf300d2d5a5' to the error queue 'error' because processing failed due to an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:34:771488 Z
	Handler failure time: 2020-07-12 09:40:34:892603 Z
	Message ID: 28c269a3-1099-4239-aac3-abf300d2d5a5
2020-07-12 12:40:49.079 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:57.435 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:49:079239 Z
	Handler failure time: 2020-07-12 09:40:56:190728 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:40:57.453 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:57.657 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:57:453904 Z
	Handler failure time: 2020-07-12 09:40:57:617471 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:40:57.677 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:57.874 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:57:677454 Z
	Handler failure time: 2020-07-12 09:40:57:828079 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:40:57.887 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:58.057 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:57:887848 Z
	Handler failure time: 2020-07-12 09:40:58:018329 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:40:58.072 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:58.240 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:58:072220 Z
	Handler failure time: 2020-07-12 09:40:58:190746 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:40:58.253 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:40:58.405 WARN  Delayed Retry will reschedule message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' after a delay of 00:00:10 because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:40:58:253455 Z
	Handler failure time: 2020-07-12 09:40:58:367388 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:08.447 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:08.600 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:08:447154 Z
	Handler failure time: 2020-07-12 09:41:08:562545 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:08.616 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:08.764 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:08:616243 Z
	Handler failure time: 2020-07-12 09:41:08:726531 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:08.786 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:08.941 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:08:786164 Z
	Handler failure time: 2020-07-12 09:41:08:900217 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:08.953 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:09.103 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:08:953101 Z
	Handler failure time: 2020-07-12 09:41:09:065077 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:09.116 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:09.273 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:09:116913 Z
	Handler failure time: 2020-07-12 09:41:09:235328 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:09.292 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:09.433 WARN  Delayed Retry will reschedule message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' after a delay of 00:00:20 because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:09:292331 Z
	Handler failure time: 2020-07-12 09:41:09:395974 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:29.484 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:29.640 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:29:484071 Z
	Handler failure time: 2020-07-12 09:41:29:601528 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:29.655 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:29.806 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:29:655671 Z
	Handler failure time: 2020-07-12 09:41:29:767437 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:29.819 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:29.969 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:29:819908 Z
	Handler failure time: 2020-07-12 09:41:29:928170 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:29.982 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:30.139 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:29:982530 Z
	Handler failure time: 2020-07-12 09:41:30:098026 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:30.151 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:30.303 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:30:151454 Z
	Handler failure time: 2020-07-12 09:41:30:264231 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:41:30.316 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:41:30.462 WARN  Delayed Retry will reschedule message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' after a delay of 00:00:30 because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:41:30:316852 Z
	Handler failure time: 2020-07-12 09:41:30:425176 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:42:00.545 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:42:00.703 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:42:00:545411 Z
	Handler failure time: 2020-07-12 09:42:00:663216 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:42:00.718 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:42:00.868 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:42:00:718089 Z
	Handler failure time: 2020-07-12 09:42:00:827395 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:42:00.880 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:42:01.034 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:42:00:880721 Z
	Handler failure time: 2020-07-12 09:42:00:993771 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:42:01.048 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:42:01.193 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:42:01:048230 Z
	Handler failure time: 2020-07-12 09:42:01:156511 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:42:01.204 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:42:01.356 INFO  Immediate Retry is going to retry message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:42:01:204849 Z
	Handler failure time: 2020-07-12 09:42:01:314242 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:42:01.369 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:42:01.517 ERROR Moving message '7e5d30e4-cc79-4e36-b1c8-abf6009f84ae' to the error queue 'error' because processing failed due to an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 77
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:90989563-561b-4487-99de-a168f16ff379
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:42:01:369637 Z
	Handler failure time: 2020-07-12 09:42:01:480352 Z
	Message ID: 7e5d30e4-cc79-4e36-b1c8-abf6009f84ae
2020-07-12 12:43:34.896 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:43:35.062 INFO  Auditing processed messages to 'audit'
2020-07-12 12:43:35.154 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:43:35.552 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:43:41.363 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:44:53.207 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:44:53.409 INFO  Auditing processed messages to 'audit'
2020-07-12 12:44:53.481 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:44:53.866 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:44:57.500 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:46:36.776 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:46:36.901 INFO  Auditing processed messages to 'audit'
2020-07-12 12:46:36.946 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:46:37.211 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:46:50.450 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:49:28.294 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:49:28.445 INFO  Auditing processed messages to 'audit'
2020-07-12 12:49:28.521 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:49:28.881 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:49:32.034 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:54:44.987 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 12:54:45.128 INFO  Auditing processed messages to 'audit'
2020-07-12 12:54:45.186 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 12:54:45.563 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 12:54:48.254 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:54:52.899 INFO  Immediate Retry is going to retry message 'e110350a-dea8-4470-b501-abf600a03270' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 74
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:b0a14d97-5f2c-415f-9284-be5a7bc919a2
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:54:45:884780 Z
	Handler failure time: 2020-07-12 09:54:52:835098 Z
	Message ID: e110350a-dea8-4470-b501-abf600a03270
2020-07-12 12:55:09.463 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:56:40.265 INFO  Immediate Retry is going to retry message 'e110350a-dea8-4470-b501-abf600a03270' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 74
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:b0a14d97-5f2c-415f-9284-be5a7bc919a2
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:54:52:984049 Z
	Handler failure time: 2020-07-12 09:56:40:207345 Z
	Message ID: e110350a-dea8-4470-b501-abf600a03270
2020-07-12 12:56:51.044 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 12:56:58.649 INFO  Immediate Retry is going to retry message 'e110350a-dea8-4470-b501-abf600a03270' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 74
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:b0a14d97-5f2c-415f-9284-be5a7bc919a2
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 09:56:40:277140 Z
	Handler failure time: 2020-07-12 09:56:55:485069 Z
	Message ID: e110350a-dea8-4470-b501-abf600a03270
2020-07-12 12:57:00.599 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 13:00:42.679 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 13:00:42.863 INFO  Auditing processed messages to 'audit'
2020-07-12 13:00:42.960 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 13:00:43.342 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 13:00:52.773 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 13:01:23.071 INFO  Immediate Retry is going to retry message 'e110350a-dea8-4470-b501-abf600a03270' because of an exception:
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at WeightWatchers.Data.SubscriberRepository.isCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Data\SubscriberRepository.cs:line 74
   at WeightWatchers.Services.SubscriberService.IsCardExists(Int32 cardId) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 64
   at WeightWatchers.Services.SubscriberService.UpdateCard(Int32 cardId, Single weight) in C:\Users\bhartman\Documents\WeightWatchersApp\WeightWatchers.Services\SubscriberService.cs:line 47
   at WeightWatchers.Api.NServiceBus.UpdateCardHandler.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\UpdateCardHandler.cs:line 26
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
ClientConnectionId:f0ea82c3-8695-46d1-9f24-502d713c03db
Error Number:208,State:1,Class:16
Exception details:
	HelpLink.ProdName: Microsoft SQL Server
	HelpLink.ProdVer: 15.00.2000
	HelpLink.EvtSrc: MSSQLServer
	HelpLink.EvtID: 208
	HelpLink.BaseHelpUrl: http://go.microsoft.com/fwlink
	HelpLink.LinkId: 20476
	Message type: Messages.UpdateCard
	Handler type: WeightWatchers.Api.NServiceBus.UpdateCardHandler
	Handler start time: 2020-07-12 10:00:43:698714 Z
	Handler failure time: 2020-07-12 10:01:12:894658 Z
	Message ID: e110350a-dea8-4470-b501-abf600a03270
2020-07-12 13:01:26.326 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 13:04:07.233 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 13:04:07.530 INFO  Auditing processed messages to 'audit'
2020-07-12 13:04:07.632 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 13:04:08.212 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 13:04:11.374 ERROR Received UpdateCard in subscriber, weight = 98 ...
2020-07-12 13:06:21.864 ERROR Received UpdateCard in subscriber, weight = 70 ...
2020-07-12 13:09:09.163 ERROR Received UpdateCard in subscriber, weight = 200 ...
2020-07-12 14:44:49.119 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:44:49.305 INFO  Auditing processed messages to 'audit'
2020-07-12 14:44:49.399 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 14:50:17.630 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:50:17.786 INFO  Auditing processed messages to 'audit'
2020-07-12 14:50:17.852 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 14:51:31.803 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:51:31.992 INFO  Auditing processed messages to 'audit'
2020-07-12 14:51:32.073 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 14:51:32.522 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 14:51:32.602 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 14:51:54.021 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:51:54.064 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:51:54.093 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:51:54.121 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:51:54.147 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:51:54.188 WARN  Delayed Retry will reschedule message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' after a delay of 00:00:10 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:04.263 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:04.294 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:04.324 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:04.355 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:04.383 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:04.409 WARN  Delayed Retry will reschedule message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' after a delay of 00:00:20 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:52:24.474 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:54:42.623 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:54:42.763 INFO  Auditing processed messages to 'audit'
2020-07-12 14:55:26.173 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:55:26.365 INFO  Auditing processed messages to 'audit'
2020-07-12 14:55:26.418 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 14:55:26.753 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 14:55:26.810 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 14:55:27.077 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:27.127 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:27.162 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:27.191 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:27.222 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:27.253 WARN  Delayed Retry will reschedule message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' after a delay of 00:00:30 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:46.638 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:46.673 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:46.704 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:46.731 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:46.758 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:46.784 WARN  Delayed Retry will reschedule message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' after a delay of 00:00:10 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:56.843 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:56.870 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:56.897 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:56.925 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:56.954 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:56.981 WARN  Delayed Retry will reschedule message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' after a delay of 00:00:20 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:55:57.346 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:57.374 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:57.401 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:57.428 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:57.456 INFO  Immediate Retry is going to retry message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:55:57.481 ERROR Moving message '8886bfc3-b4ac-4197-9b6c-abf600c3874f' to the error queue 'error' because processing failed due to an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 8886bfc3-b4ac-4197-9b6c-abf600c3874f
2020-07-12 14:56:45.290 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:56:45.422 INFO  Auditing processed messages to 'audit'
2020-07-12 14:56:45.488 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 14:56:45.889 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 14:56:45.951 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 14:56:46.244 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:56:46.288 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:56:46.321 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:56:46.353 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:56:46.388 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:56:46.419 WARN  Delayed Retry will reschedule message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' after a delay of 00:00:30 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:17.589 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:20.295 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:20.327 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:20.359 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:20.408 INFO  Immediate Retry is going to retry message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:20.443 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:21.435 ERROR Moving message '5c1150fe-ab4d-4cf6-afc5-abf600c49804' to the error queue 'error' because processing failed due to an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 5c1150fe-ab4d-4cf6-afc5-abf600c49804
2020-07-12 14:57:22.551 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:22.601 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:22.653 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:23.540 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:23.574 WARN  Delayed Retry will reschedule message '61f3a483-0f31-4407-a3fe-abf600c505e6' after a delay of 00:00:10 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:33.636 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:33.668 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:33.695 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:33.721 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:33.749 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:33.775 WARN  Delayed Retry will reschedule message '61f3a483-0f31-4407-a3fe-abf600c505e6' after a delay of 00:00:20 because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:57:53.826 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.InvalidOperationException: Unable to resolve service for type 'NServiceBus.Logging.ILog' while attempting to activate 'SubscriberHandler.SubscriberPolicySaga'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain, Int32 slot)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.<>c__DisplayClass7_0.<GetCallSite>b__0(Type type)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at NServiceBus.Extensions.DependencyInjection.ServiceProviderAdapter.ChildScopeAdapter.Build(Type typeToBuild)
   at NServiceBus.Extensions.DependencyInjection.ContainerAdapter`1.ChildContainerAdapter.Build(Type typeToBuild)
   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 14:59:56.201 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 14:59:56.367 INFO  Auditing processed messages to 'audit'
2020-07-12 14:59:56.451 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 14:59:56.881 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 14:59:56.956 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 14:59:57.358 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:00:03.531 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 11:59:57:357282 Z
	Handler failure time: 2020-07-12 12:00:03:454181 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:00:03.559 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:00:05.491 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:00:03:559320 Z
	Handler failure time: 2020-07-12 12:00:05:456676 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:00:05.504 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:00:06.923 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:00:05:504337 Z
	Handler failure time: 2020-07-12 12:00:06:888197 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:00:06.931 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:00:07.929 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:00:06:931038 Z
	Handler failure time: 2020-07-12 12:00:07:894170 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:00:07.942 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:00:08.846 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:00:07:942506 Z
	Handler failure time: 2020-07-12 12:00:08:812414 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:00:08.858 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:00:09.620 WARN  Delayed Retry will reschedule message '61f3a483-0f31-4407-a3fe-abf600c505e6' after a delay of 00:00:30 because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:00:08:858744 Z
	Handler failure time: 2020-07-12 12:00:09:580954 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:00:39.677 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:02:00.547 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:00:39:677609 Z
	Handler failure time: 2020-07-12 12:01:54:148012 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:02:00.557 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:02:17.990 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:02:00:557988 Z
	Handler failure time: 2020-07-12 12:02:17:957080 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:02:18.000 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:02:22.042 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:02:18:000569 Z
	Handler failure time: 2020-07-12 12:02:22:008533 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:02:22.053 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:02:27.041 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:02:22:053083 Z
	Handler failure time: 2020-07-12 12:02:27:008002 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:02:27.053 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:02:28.003 INFO  Immediate Retry is going to retry message '61f3a483-0f31-4407-a3fe-abf600c505e6' because of an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:02:27:053966 Z
	Handler failure time: 2020-07-12 12:02:27:969485 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:02:28.014 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:02:28.879 ERROR Moving message '61f3a483-0f31-4407-a3fe-abf600c505e6' to the error queue 'error' because processing failed due to an exception:
System.Exception: No destination specified for message: Messages.Commands.AddTrack
   at NServiceBus.UnicastSendRouter.RouteUsingTable(IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.SelectRoute(State state, IOutgoingSendContext context)
   at NServiceBus.UnicastSendRouter.Route(IOutgoingSendContext context)
   at NServiceBus.SendConnector.Invoke(IOutgoingSendContext context, Func`2 stage)
   at SubscriberHandler.SubscriberPolicySaga.Handle(UpdateCard message, IMessageHandlerContext context) in C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\SubscriberPolicy.Saga.cs:line 37
   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context)
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message type: Messages.UpdateCard
	Handler type: SubscriberHandler.SubscriberPolicySaga
	Handler start time: 2020-07-12 12:02:28:013991 Z
	Handler failure time: 2020-07-12 12:02:28:843102 Z
	Message ID: 61f3a483-0f31-4407-a3fe-abf600c505e6
2020-07-12 15:05:20.492 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 15:05:20.625 INFO  Auditing processed messages to 'audit'
2020-07-12 15:05:20.689 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 15:05:20.997 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 15:05:21.050 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 15:05:29.926 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:21:02.863 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 15:21:03.040 INFO  Auditing processed messages to 'audit'
2020-07-12 15:21:03.107 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 15:21:03.618 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 15:21:03.688 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 15:21:23.526 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:24:47.578 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 15:24:47.739 INFO  Auditing processed messages to 'audit'
2020-07-12 15:24:47.808 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 15:24:48.225 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 15:24:48.304 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 15:24:57.212 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:33:04.382 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 15:33:04.522 INFO  Auditing processed messages to 'audit'
2020-07-12 15:33:04.575 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 15:33:04.941 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 15:33:05.003 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 15:33:35.191 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 15:35:15.224 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 15:35:15.398 INFO  Auditing processed messages to 'audit'
2020-07-12 15:35:15.481 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 15:35:15.992 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 15:35:16.056 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 15:35:37.275 ERROR Received UpdateCard in subscriber saga, weight = 190 ...
2020-07-12 16:03:20.683 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 16:03:20.935 INFO  Auditing processed messages to 'audit'
2020-07-12 16:03:21.005 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 16:03:21.391 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 16:03:21.465 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 16:05:11.958 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 16:05:12.137 INFO  Auditing processed messages to 'audit'
2020-07-12 16:05:12.230 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 16:05:12.640 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 16:05:12.700 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 16:06:54.043 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 16:06:54.223 INFO  Auditing processed messages to 'audit'
2020-07-12 16:06:54.297 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 16:06:54.750 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 16:06:54.831 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 17:00:49.807 WARN  'Subscriber Publish' connection shutdown: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
2020-07-12 17:00:49.807 WARN  'Subscriber MessagePump' connection shutdown: AMQP close-reason, initiated by Library, code=541, text='Unexpected Exception', classId=0, methodId=0, cause=System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 size)
   --- End of inner exception stack trace ---
   at RabbitMQ.Client.Impl.InboundFrame.ReadFrom(NetworkBinaryReader reader)
   at RabbitMQ.Client.Impl.SocketFrameHandler.ReadFrame()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoopIteration()
   at RabbitMQ.Client.Framing.Impl.Connection.MainLoop()
2020-07-12 17:00:49.814 INFO  Attempting to reconnect in 10 seconds.
2020-07-12 17:00:49.819 WARN  The circuit breaker for 'Subscriber MessagePump' is now in the armed state
2020-07-12 17:01:01.316 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 17:01:01.564 INFO  Auditing processed messages to 'audit'
2020-07-12 17:01:01.641 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 17:01:02.107 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 17:01:02.195 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 17:01:36.992 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 17:49:20.915 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 17:49:21.272 INFO  Auditing processed messages to 'audit'
2020-07-12 17:49:21.382 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 17:49:22.208 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 17:49:22.425 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 17:50:47.025 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:06:09.949 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 18:06:10.089 INFO  Auditing processed messages to 'audit'
2020-07-12 18:06:10.152 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 18:06:10.573 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 18:06:10.644 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 18:06:30.012 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:08:11.691 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:11:47.417 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 18:11:47.543 INFO  Auditing processed messages to 'audit'
2020-07-12 18:11:47.598 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 18:11:47.988 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 18:11:48.058 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 18:13:41.628 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:41.663 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:41.684 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:41.730 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:41.739 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:41.761 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:41.769 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:41.790 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:41.800 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:41.823 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:41.834 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:41.857 WARN  Delayed Retry will reschedule message 'b06091e1-703e-4976-a986-abf600faf3c9' after a delay of 00:00:10 because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:51.916 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:51.939 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:51.948 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:51.970 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:51.978 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:52.000 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:52.007 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:52.030 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:52.038 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:52.059 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:13:52.067 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:13:52.090 WARN  Delayed Retry will reschedule message 'b06091e1-703e-4976-a986-abf600faf3c9' after a delay of 00:00:20 because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:12.106 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:12.130 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:12.138 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:12.160 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:12.168 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:12.189 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:12.198 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:12.219 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:12.227 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:12.248 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:12.256 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:12.277 WARN  Delayed Retry will reschedule message 'b06091e1-703e-4976-a986-abf600faf3c9' after a delay of 00:00:30 because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:42.339 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:42.363 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:42.373 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:42.396 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:42.404 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:42.427 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:42.435 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:42.457 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:42.467 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:42.490 INFO  Immediate Retry is going to retry message 'b06091e1-703e-4976-a986-abf600faf3c9' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:14:42.503 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:14:42.529 ERROR Moving message 'b06091e1-703e-4976-a986-abf600faf3c9' to the error queue 'error' because processing failed due to an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: b06091e1-703e-4976-a986-abf600faf3c9
2020-07-12 18:17:43.594 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 18:17:43.747 INFO  Auditing processed messages to 'audit'
2020-07-12 18:17:43.814 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 18:17:44.408 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 18:17:44.481 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 18:18:06.194 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:20:20.286 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:20:20.290 WARN  You are using a basic message to do pub/sub. Consider implementing the more specific ICommand and IEvent interfaces on the type 'Messages.cardUpdated' to help NServiceBus to enforce messaging best practices for you.
2020-07-12 18:21:33.260 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:23:55.669 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 18:23:55.777 INFO  Auditing processed messages to 'audit'
2020-07-12 18:23:55.833 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 18:23:56.178 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 18:23:56.236 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 18:23:56.546 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:23:56.546 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:23:56.623 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingMessageBehavior.InvokeIncomingMessageMutators(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.UnitOfWorkBehavior.InvokeUnitsOfWork(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.MutateIncomingTransportMessageBehavior.InvokeIncomingTransportMessagesMutators(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:23:57.463 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:23:57.493 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:23:57.502 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:23:57.528 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:23:57.538 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:23:57.564 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:23:57.573 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:23:57.601 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:23:57.610 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:23:57.640 WARN  Delayed Retry will reschedule message '52c67e20-319f-468c-a3cb-abf600fd2a43' after a delay of 00:00:10 because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:01.613 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:01.618 WARN  You are using a basic message to do pub/sub. Consider implementing the more specific ICommand and IEvent interfaces on the type 'Messages.cardUpdated' to help NServiceBus to enforce messaging best practices for you.
2020-07-12 18:24:07.690 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:07.715 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:07.723 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:07.746 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:07.754 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:07.775 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:07.784 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:07.806 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:07.815 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:07.836 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:07.844 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:07.868 WARN  Delayed Retry will reschedule message '52c67e20-319f-468c-a3cb-abf600fd2a43' after a delay of 00:00:20 because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:27.914 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:27.938 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:27.950 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:27.972 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:27.981 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:28.003 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:28.012 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:28.037 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:28.045 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:28.068 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:28.099 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:28.122 WARN  Delayed Retry will reschedule message '52c67e20-319f-468c-a3cb-abf600fd2a43' after a delay of 00:00:30 because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:58.186 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:58.212 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:58.221 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:58.243 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:58.252 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:58.276 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:58.286 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:58.309 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:58.317 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:58.340 INFO  Immediate Retry is going to retry message '52c67e20-319f-468c-a3cb-abf600fd2a43' because of an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:24:58.349 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:24:58.371 ERROR Moving message '52c67e20-319f-468c-a3cb-abf600fd2a43' to the error queue 'error' because processing failed due to an exception:
System.Exception: The correlated property 'measureId' on saga 'SubscriberPolicySaga' does not have a value.
A correlated property must have a non default (i.e. non null and non-empty) value assigned when a new saga instance is created.
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateCorrelationPropertyHaveValue(Object currentCorrelationPropertyValue)
   at NServiceBus.Sagas.ActiveSagaInstance.ValidateChanges()
   at NServiceBus.SagaPersistenceBehavior.Invoke(IInvokeHandlerContext context, Func`2 next)
   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage)
   at CurrentSessionBehavior.Invoke(IIncomingLogicalMessageContext context, Func`1 next) in /_/src/SqlPersistence/SynchronizedStorage/CurrentSessionBehavior.cs:line 19
   at NServiceBus.ScheduledTaskHandlingBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.InvokeSagaNotFoundBehavior.Invoke(IIncomingLogicalMessageContext context, Func`2 next)
   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage)
   at NServiceBus.InvokeAuditPipelineBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next)
   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next)
   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext)
   at NServiceBus.Transport.RabbitMQ.MessagePump.Process(BasicDeliverEventArgs message)
Exception details:
	Message ID: 52c67e20-319f-468c-a3cb-abf600fd2a43
2020-07-12 18:31:53.309 INFO  Logging to 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\' with level Info
2020-07-12 18:31:53.421 INFO  Auditing processed messages to 'audit'
2020-07-12 18:31:53.478 INFO  Selected active license from C:\Users\bhartman\AppData\Local\ParticularSoftware\license.xml
License Expiration: 2020-10-05
2020-07-12 18:31:53.809 INFO  Executing 'C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Outbox_Create.sql'
2020-07-12 18:31:53.867 INFO  Executing saga creation scripts:
C:\Users\bhartman\Documents\WeightWatchersApp\SubscriberHandler\bin\Debug\netcoreapp3.1\NServiceBus.Persistence.Sql\MsSqlServer\Sagas\SubscriberPolicySaga_Create.sql
2020-07-12 18:32:24.082 ERROR Received UpdateCard in subscriber saga, weight = 80 ...
2020-07-12 18:33:57.635 ERROR Received track added in subscriber saga, added = True ...
2020-07-12 18:34:29.860 WARN  You are using a basic message to do pub/sub. Consider implementing the more specific ICommand and IEvent interfaces on the type 'Messages.cardUpdated' to help NServiceBus to enforce messaging best practices for you.
